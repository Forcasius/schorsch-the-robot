#ifndef INCLUDED_COM_SUN_STAR_SHEET_DDELINKINFO_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_DDELINKINFO_HDL

#include "sal/config.h"

#include "com/sun/star/sheet/DDEItemInfo.hdl"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace sheet {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct DDELinkInfo {
    inline DDELinkInfo() SAL_THROW(());

    inline DDELinkInfo(const ::rtl::OUString& Service_, const ::rtl::OUString& Topic_, const ::com::sun::star::uno::Sequence< ::com::sun::star::sheet::DDEItemInfo >& Items_) SAL_THROW(());

    ::rtl::OUString Service;
    ::rtl::OUString Topic;
    ::com::sun::star::uno::Sequence< ::com::sun::star::sheet::DDEItemInfo > Items;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::sheet::DDELinkInfo* );

#endif // INCLUDED_COM_SUN_STAR_SHEET_DDELINKINFO_HDL
