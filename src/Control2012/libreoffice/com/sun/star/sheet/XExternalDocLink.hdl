#ifndef INCLUDED_COM_SUN_STAR_SHEET_XEXTERNALDOCLINK_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_XEXTERNALDOCLINK_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace sheet { class XExternalSheetCache; } } } }
#include "com/sun/star/container/XEnumerationAccess.hdl"
#include "com/sun/star/container/XIndexAccess.hdl"
#include "com/sun/star/container/XNameAccess.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace sheet {

class SAL_NO_VTABLE XExternalDocLink : public ::com::sun::star::container::XNameAccess, public ::com::sun::star::container::XIndexAccess, public ::com::sun::star::container::XEnumerationAccess
{
public:

    // Attributes
    virtual ::sal_Int32 SAL_CALL getTokenIndex() throw (::com::sun::star::uno::RuntimeException) = 0;

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::sheet::XExternalSheetCache > SAL_CALL addSheetCache( const ::rtl::OUString& aSheetName, ::sal_Bool DynamicCache ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::sheet::XExternalDocLink >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_SHEET_XEXTERNALDOCLINK_HDL
