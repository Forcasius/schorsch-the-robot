#ifndef INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_STRATUMCREATIONEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_STRATUMCREATIONEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/configuration/backend/BackendSetupException.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace configuration { namespace backend {

class CPPU_GCC_DLLPUBLIC_EXPORT StratumCreationException : public ::com::sun::star::configuration::backend::BackendSetupException
{
public:
    inline CPPU_GCC_DLLPRIVATE StratumCreationException() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE StratumCreationException(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::com::sun::star::uno::Any& BackendException_, const ::rtl::OUString& StratumService_, const ::rtl::OUString& StratumData_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE StratumCreationException(StratumCreationException const &);

    inline CPPU_GCC_DLLPRIVATE ~StratumCreationException();

    inline CPPU_GCC_DLLPRIVATE StratumCreationException & operator =(StratumCreationException const &);

    ::rtl::OUString StratumService CPPU_GCC3_ALIGN( ::com::sun::star::configuration::backend::BackendSetupException );
    ::rtl::OUString StratumData;
};

} } } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::configuration::backend::StratumCreationException* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_STRATUMCREATIONEXCEPTION_HDL
