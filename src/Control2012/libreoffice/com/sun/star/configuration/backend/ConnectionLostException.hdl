#ifndef INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_CONNECTIONLOSTEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_CONNECTIONLOSTEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/configuration/backend/BackendAccessException.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace configuration { namespace backend {

class CPPU_GCC_DLLPUBLIC_EXPORT ConnectionLostException : public ::com::sun::star::configuration::backend::BackendAccessException
{
public:
    inline CPPU_GCC_DLLPRIVATE ConnectionLostException() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ConnectionLostException(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::com::sun::star::uno::Any& TargetException_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ConnectionLostException(ConnectionLostException const &);

    inline CPPU_GCC_DLLPRIVATE ~ConnectionLostException();

    inline CPPU_GCC_DLLPRIVATE ConnectionLostException & operator =(ConnectionLostException const &);

};

} } } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::configuration::backend::ConnectionLostException* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_CONFIGURATION_BACKEND_CONNECTIONLOSTEXCEPTION_HDL
