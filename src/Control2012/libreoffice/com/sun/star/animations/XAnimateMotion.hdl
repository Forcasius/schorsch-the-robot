#ifndef INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATEMOTION_HDL
#define INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATEMOTION_HDL

#include "sal/config.h"

#include "com/sun/star/animations/XAnimate.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace animations {

class SAL_NO_VTABLE XAnimateMotion : public ::com::sun::star::animations::XAnimate
{
public:

    // Attributes
    virtual ::com::sun::star::uno::Any SAL_CALL getPath() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setPath( const ::com::sun::star::uno::Any& _path ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getOrigin() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setOrigin( const ::com::sun::star::uno::Any& _origin ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimateMotion >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATEMOTION_HDL
