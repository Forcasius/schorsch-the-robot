#ifndef INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATIONNODE_HDL
#define INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATIONNODE_HDL

#include "sal/config.h"

#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/container/XChild.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace animations {

class SAL_NO_VTABLE XAnimationNode : public ::com::sun::star::container::XChild
{
public:

    // Attributes
    virtual ::sal_Int16 SAL_CALL getType() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getBegin() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBegin( const ::com::sun::star::uno::Any& _begin ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getDuration() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDuration( const ::com::sun::star::uno::Any& _duration ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getEnd() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setEnd( const ::com::sun::star::uno::Any& _end ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getEndSync() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setEndSync( const ::com::sun::star::uno::Any& _endsync ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getRepeatCount() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRepeatCount( const ::com::sun::star::uno::Any& _repeatcount ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Any SAL_CALL getRepeatDuration() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRepeatDuration( const ::com::sun::star::uno::Any& _repeatduration ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getFill() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setFill( ::sal_Int16 _fill ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getFillDefault() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setFillDefault( ::sal_Int16 _filldefault ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getRestart() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRestart( ::sal_Int16 _restart ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getRestartDefault() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRestartDefault( ::sal_Int16 _restartdefault ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual double SAL_CALL getAcceleration() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setAcceleration( double _acceleration ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual double SAL_CALL getDecelerate() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDecelerate( double _decelerate ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL getAutoReverse() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setAutoReverse( ::sal_Bool _autoreverse ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue > SAL_CALL getUserData() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setUserData( const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue >& _userdata ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATIONNODE_HDL
