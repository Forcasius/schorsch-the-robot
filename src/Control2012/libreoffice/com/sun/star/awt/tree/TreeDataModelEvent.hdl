#ifndef INCLUDED_COM_SUN_STAR_AWT_TREE_TREEDATAMODELEVENT_HDL
#define INCLUDED_COM_SUN_STAR_AWT_TREE_TREEDATAMODELEVENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { namespace tree { class XTreeNode; } } } } }
#include "com/sun/star/lang/EventObject.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace awt { namespace tree {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct TreeDataModelEvent: public ::com::sun::star::lang::EventObject {
    inline TreeDataModelEvent() SAL_THROW(());

    inline TreeDataModelEvent(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Source_, const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Reference< ::com::sun::star::awt::tree::XTreeNode > >& Nodes_, const ::com::sun::star::uno::Reference< ::com::sun::star::awt::tree::XTreeNode >& ParentNode_) SAL_THROW(());

    ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Reference< ::com::sun::star::awt::tree::XTreeNode > > Nodes CPPU_GCC3_ALIGN(::com::sun::star::lang::EventObject);
    ::com::sun::star::uno::Reference< ::com::sun::star::awt::tree::XTreeNode > ParentNode;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::awt::tree::TreeDataModelEvent* );

#endif // INCLUDED_COM_SUN_STAR_AWT_TREE_TREEDATAMODELEVENT_HDL
