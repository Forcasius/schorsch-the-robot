#ifndef INCLUDED_COM_SUN_STAR_AWT_ENHANCEDMOUSEEVENT_HDL
#define INCLUDED_COM_SUN_STAR_AWT_ENHANCEDMOUSEEVENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace uno { class XInterface; } } } }
#include "com/sun/star/awt/MouseEvent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace awt {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct EnhancedMouseEvent: public ::com::sun::star::awt::MouseEvent {
    inline EnhancedMouseEvent() SAL_THROW(());

    inline EnhancedMouseEvent(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Source_, const ::sal_Int16& Modifiers_, const ::sal_Int16& Buttons_, const ::sal_Int32& X_, const ::sal_Int32& Y_, const ::sal_Int32& ClickCount_, const ::sal_Bool& PopupTrigger_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Target_) SAL_THROW(());

    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > Target CPPU_GCC3_ALIGN(::com::sun::star::awt::MouseEvent);
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::awt::EnhancedMouseEvent* );

#endif // INCLUDED_COM_SUN_STAR_AWT_ENHANCEDMOUSEEVENT_HDL
