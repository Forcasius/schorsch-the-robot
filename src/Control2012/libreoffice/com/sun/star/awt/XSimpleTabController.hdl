#ifndef INCLUDED_COM_SUN_STAR_AWT_XSIMPLETABCONTROLLER_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XSIMPLETABCONTROLLER_HDL

#include "sal/config.h"

#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
namespace com { namespace sun { namespace star { namespace awt { class XTabListener; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE XSimpleTabController : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::sal_Int32 SAL_CALL insertTab(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeTab( ::sal_Int32 ID ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setTabProps( ::sal_Int32 ID, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue >& Properties ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue > SAL_CALL getTabProps( ::sal_Int32 ID ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL activateTab( ::sal_Int32 ID ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int32 SAL_CALL getActiveTabID(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL addTabListener( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XTabListener >& Listener ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeTabListener( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XTabListener >& Listener ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XSimpleTabController >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_AWT_XSIMPLETABCONTROLLER_HDL
