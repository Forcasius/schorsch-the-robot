#ifndef INCLUDED_COM_SUN_STAR_TASK_DOCUMENTPASSWORDREQUEST2_HDL
#define INCLUDED_COM_SUN_STAR_TASK_DOCUMENTPASSWORDREQUEST2_HDL

#include "sal/config.h"

#include "com/sun/star/task/DocumentPasswordRequest.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace task {

class CPPU_GCC_DLLPUBLIC_EXPORT DocumentPasswordRequest2 : public ::com::sun::star::task::DocumentPasswordRequest
{
public:
    inline CPPU_GCC_DLLPRIVATE DocumentPasswordRequest2() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE DocumentPasswordRequest2(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::com::sun::star::task::InteractionClassification& Classification_, const ::com::sun::star::task::PasswordRequestMode& Mode_, const ::rtl::OUString& Name_, const ::sal_Bool& IsRequestPasswordToModify_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE DocumentPasswordRequest2(DocumentPasswordRequest2 const &);

    inline CPPU_GCC_DLLPRIVATE ~DocumentPasswordRequest2();

    inline CPPU_GCC_DLLPRIVATE DocumentPasswordRequest2 & operator =(DocumentPasswordRequest2 const &);

    ::sal_Bool IsRequestPasswordToModify CPPU_GCC3_ALIGN( ::com::sun::star::task::DocumentPasswordRequest );
};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::task::DocumentPasswordRequest2* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_TASK_DOCUMENTPASSWORDREQUEST2_HDL
