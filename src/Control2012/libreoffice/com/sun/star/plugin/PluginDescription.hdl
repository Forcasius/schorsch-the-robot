#ifndef INCLUDED_COM_SUN_STAR_PLUGIN_PLUGINDESCRIPTION_HDL
#define INCLUDED_COM_SUN_STAR_PLUGIN_PLUGINDESCRIPTION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace plugin {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct PluginDescription {
    inline PluginDescription() SAL_THROW(());

    inline PluginDescription(const ::rtl::OUString& PluginName_, const ::rtl::OUString& Mimetype_, const ::rtl::OUString& Extension_, const ::rtl::OUString& Description_) SAL_THROW(());

    ::rtl::OUString PluginName;
    ::rtl::OUString Mimetype;
    ::rtl::OUString Extension;
    ::rtl::OUString Description;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::plugin::PluginDescription* );

#endif // INCLUDED_COM_SUN_STAR_PLUGIN_PLUGINDESCRIPTION_HDL
