#ifndef INCLUDED_COM_SUN_STAR_RENDERING_STRINGCONTEXT_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_STRINGCONTEXT_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace rendering {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct StringContext {
    inline StringContext() SAL_THROW(());

    inline StringContext(const ::rtl::OUString& Text_, const ::sal_Int32& StartPosition_, const ::sal_Int32& Length_) SAL_THROW(());

    ::rtl::OUString Text;
    ::sal_Int32 StartPosition;
    ::sal_Int32 Length;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::rendering::StringContext* );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_STRINGCONTEXT_HDL
