#ifndef INCLUDED_COM_SUN_STAR_RENDERING_PANOSE_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_PANOSE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace rendering {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct Panose {
    inline Panose() SAL_THROW(());

    inline Panose(const ::sal_Int8& FamilyType_, const ::sal_Int8& SerifStyle_, const ::sal_Int8& Weight_, const ::sal_Int8& Proportion_, const ::sal_Int8& Contrast_, const ::sal_Int8& StrokeVariation_, const ::sal_Int8& ArmStyle_, const ::sal_Int8& Letterform_, const ::sal_Int8& Midline_, const ::sal_Int8& XHeight_) SAL_THROW(());

    ::sal_Int8 FamilyType;
    ::sal_Int8 SerifStyle;
    ::sal_Int8 Weight;
    ::sal_Int8 Proportion;
    ::sal_Int8 Contrast;
    ::sal_Int8 StrokeVariation;
    ::sal_Int8 ArmStyle;
    ::sal_Int8 Letterform;
    ::sal_Int8 Midline;
    ::sal_Int8 XHeight;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::rendering::Panose* );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_PANOSE_HDL
