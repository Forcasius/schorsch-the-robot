#ifndef INCLUDED_COM_SUN_STAR_RENDERING_XHALFFLOATREADONLYBITMAP_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_XHALFFLOATREADONLYBITMAP_HDL

#include "sal/config.h"

#include "com/sun/star/geometry/IntegerPoint2D.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
#include "com/sun/star/rendering/VolatileContentDestroyedException.hdl"
#include "com/sun/star/rendering/FloatingPointBitmapLayout.hdl"
#include "com/sun/star/geometry/IntegerRectangle2D.hdl"
#include "com/sun/star/rendering/XBitmap.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace rendering {

class SAL_NO_VTABLE XHalfFloatReadOnlyBitmap : public ::com::sun::star::rendering::XBitmap
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::sal_Int16 > SAL_CALL getData( const ::com::sun::star::geometry::IntegerRectangle2D& rect ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::rendering::VolatileContentDestroyedException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::sal_Int16 > SAL_CALL getPixel( const ::com::sun::star::geometry::IntegerPoint2D& pos ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::rendering::VolatileContentDestroyedException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::rendering::FloatingPointBitmapLayout SAL_CALL getMemoryLayout(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XHalfFloatReadOnlyBitmap >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_XHALFFLOATREADONLYBITMAP_HDL
