#ifndef INCLUDED_COM_SUN_STAR_RENDERING_RGBCOLOR_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_RGBCOLOR_HDL

#include "sal/config.h"

#include "com/sun/star/rendering/ColorComponent.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace rendering {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct RGBColor {
    inline RGBColor() SAL_THROW(());

    inline RGBColor(const double& Red_, const double& Green_, const double& Blue_) SAL_THROW(());

    double Red;
    double Green;
    double Blue;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::rendering::RGBColor* );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_RGBCOLOR_HDL
