#ifndef INCLUDED_COM_SUN_STAR_RENDERING_VIEWSTATE_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_VIEWSTATE_HDL

#include "sal/config.h"

#include "com/sun/star/geometry/AffineMatrix2D.hdl"
namespace com { namespace sun { namespace star { namespace rendering { class XPolyPolygon2D; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace rendering {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ViewState {
    inline ViewState() SAL_THROW(());

    inline ViewState(const ::com::sun::star::geometry::AffineMatrix2D& AffineTransform_, const ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XPolyPolygon2D >& Clip_) SAL_THROW(());

    ::com::sun::star::geometry::AffineMatrix2D AffineTransform;
    ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XPolyPolygon2D > Clip;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::rendering::ViewState* );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_VIEWSTATE_HDL
