#ifndef INCLUDED_COM_SUN_STAR_RENDERING_XBITMAPCANVAS_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_XBITMAPCANVAS_HDL

#include "sal/config.h"

#include "com/sun/star/rendering/ViewState.hdl"
#include "com/sun/star/rendering/VolatileContentDestroyedException.hdl"
#include "com/sun/star/geometry/RealRectangle2D.hdl"
namespace com { namespace sun { namespace star { namespace rendering { class XBitmapCanvas; } } } }
#include "com/sun/star/rendering/RenderState.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/rendering/XCanvas.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace rendering {

class SAL_NO_VTABLE XBitmapCanvas : public ::com::sun::star::rendering::XCanvas
{
public:

    // Methods
    virtual void SAL_CALL copyRect( const ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XBitmapCanvas >& sourceCanvas, const ::com::sun::star::geometry::RealRectangle2D& sourceRect, const ::com::sun::star::rendering::ViewState& sourceViewState, const ::com::sun::star::rendering::RenderState& sourceRenderState, const ::com::sun::star::geometry::RealRectangle2D& destRect, const ::com::sun::star::rendering::ViewState& destViewState, const ::com::sun::star::rendering::RenderState& destRenderState ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::rendering::VolatileContentDestroyedException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XBitmapCanvas >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_XBITMAPCANVAS_HDL
