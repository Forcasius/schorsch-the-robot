#ifndef INCLUDED_COM_SUN_STAR_RENDERING_XINTEGERBITMAP_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_XINTEGERBITMAP_HDL

#include "sal/config.h"

#include "com/sun/star/geometry/IntegerPoint2D.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/rendering/XIntegerReadOnlyBitmap.hdl"
#include "com/sun/star/rendering/IntegerBitmapLayout.hdl"
#include "com/sun/star/geometry/IntegerRectangle2D.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace rendering {

class SAL_NO_VTABLE XIntegerBitmap : public ::com::sun::star::rendering::XIntegerReadOnlyBitmap
{
public:

    // Methods
    virtual void SAL_CALL setData( const ::com::sun::star::uno::Sequence< ::sal_Int8 >& data, const ::com::sun::star::rendering::IntegerBitmapLayout& bitmapLayout, const ::com::sun::star::geometry::IntegerRectangle2D& rect ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setPixel( const ::com::sun::star::uno::Sequence< ::sal_Int8 >& color, const ::com::sun::star::rendering::IntegerBitmapLayout& bitmapLayout, const ::com::sun::star::geometry::IntegerPoint2D& pos ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XIntegerBitmap >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_RENDERING_XINTEGERBITMAP_HDL
