#ifndef INCLUDED_COM_SUN_STAR_DATATRANSFER_DATAFLAVOR_HDL
#define INCLUDED_COM_SUN_STAR_DATATRANSFER_DATAFLAVOR_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Type.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace datatransfer {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct DataFlavor {
    inline DataFlavor() SAL_THROW(());

    inline DataFlavor(const ::rtl::OUString& MimeType_, const ::rtl::OUString& HumanPresentableName_, const ::com::sun::star::uno::Type& DataType_) SAL_THROW(());

    ::rtl::OUString MimeType;
    ::rtl::OUString HumanPresentableName;
    ::com::sun::star::uno::Type DataType;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::datatransfer::DataFlavor* );

#endif // INCLUDED_COM_SUN_STAR_DATATRANSFER_DATAFLAVOR_HDL
