#ifndef INCLUDED_COM_SUN_STAR_SDBC_XPARAMETERS_HDL
#define INCLUDED_COM_SUN_STAR_SDBC_XPARAMETERS_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace sdbc { class XArray; } } } }
namespace com { namespace sun { namespace star { namespace sdbc { class XClob; } } } }
#include "com/sun/star/sdbc/SQLException.hdl"
namespace com { namespace sun { namespace star { namespace sdbc { class XBlob; } } } }
namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
#include "com/sun/star/util/DateTime.hdl"
#include "com/sun/star/util/Time.hdl"
#include "com/sun/star/util/Date.hdl"
namespace com { namespace sun { namespace star { namespace sdbc { class XRef; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace sdbc {

class SAL_NO_VTABLE XParameters : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL setNull( ::sal_Int32 parameterIndex, ::sal_Int32 sqlType ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setObjectNull( ::sal_Int32 parameterIndex, ::sal_Int32 sqlType, const ::rtl::OUString& typeName ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBoolean( ::sal_Int32 parameterIndex, ::sal_Bool x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setByte( ::sal_Int32 parameterIndex, ::sal_Int8 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setShort( ::sal_Int32 parameterIndex, ::sal_Int16 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setInt( ::sal_Int32 parameterIndex, ::sal_Int32 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setLong( ::sal_Int32 parameterIndex, ::sal_Int64 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setFloat( ::sal_Int32 parameterIndex, float x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDouble( ::sal_Int32 parameterIndex, double x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setString( ::sal_Int32 parameterIndex, const ::rtl::OUString& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBytes( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Sequence< ::sal_Int8 >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDate( ::sal_Int32 parameterIndex, const ::com::sun::star::util::Date& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setTime( ::sal_Int32 parameterIndex, const ::com::sun::star::util::Time& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setTimestamp( ::sal_Int32 parameterIndex, const ::com::sun::star::util::DateTime& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBinaryStream( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& x, ::sal_Int32 length ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setCharacterStream( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& x, ::sal_Int32 length ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setObject( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Any& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setObjectWithInfo( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Any& x, ::sal_Int32 targetSqlType, ::sal_Int32 scale ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRef( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XRef >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBlob( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XBlob >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setClob( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XClob >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setArray( ::sal_Int32 parameterIndex, const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XArray >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL clearParameters(  ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XParameters >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_SDBC_XPARAMETERS_HDL
