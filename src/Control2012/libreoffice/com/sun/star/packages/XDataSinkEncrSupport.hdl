#ifndef INCLUDED_COM_SUN_STAR_PACKAGES_XDATASINKENCRSUPPORT_HDL
#define INCLUDED_COM_SUN_STAR_PACKAGES_XDATASINKENCRSUPPORT_HDL

#include "sal/config.h"

#include "com/sun/star/packages/EncryptionNotAllowedException.hdl"
#include "com/sun/star/packages/NoEncryptionException.hdl"
#include "com/sun/star/io/IOException.hdl"
#include "com/sun/star/packages/NoRawFormatException.hdl"
#include "com/sun/star/packages/WrongPasswordException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace packages {

class SAL_NO_VTABLE XDataSinkEncrSupport : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream > SAL_CALL getDataStream(  ) throw (::com::sun::star::packages::WrongPasswordException, ::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream > SAL_CALL getRawStream(  ) throw (::com::sun::star::packages::NoEncryptionException, ::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDataStream( const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& aStream ) throw (::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setRawStream( const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& aStream ) throw (::com::sun::star::packages::EncryptionNotAllowedException, ::com::sun::star::packages::NoRawFormatException, ::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream > SAL_CALL getPlainRawStream(  ) throw (::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::packages::XDataSinkEncrSupport >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_PACKAGES_XDATASINKENCRSUPPORT_HDL
