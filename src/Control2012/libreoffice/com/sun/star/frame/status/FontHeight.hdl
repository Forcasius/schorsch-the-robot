#ifndef INCLUDED_COM_SUN_STAR_FRAME_STATUS_FONTHEIGHT_HDL
#define INCLUDED_COM_SUN_STAR_FRAME_STATUS_FONTHEIGHT_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace frame { namespace status {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct FontHeight {
    inline FontHeight() SAL_THROW(());

    inline FontHeight(const float& Height_, const ::sal_Int16& Prop_, const float& Diff_) SAL_THROW(());

    float Height;
    ::sal_Int16 Prop;
    float Diff;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::frame::status::FontHeight* );

#endif // INCLUDED_COM_SUN_STAR_FRAME_STATUS_FONTHEIGHT_HDL
