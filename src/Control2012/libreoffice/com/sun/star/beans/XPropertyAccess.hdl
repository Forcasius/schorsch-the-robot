#ifndef INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYACCESS_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYACCESS_HDL

#include "sal/config.h"

#include "com/sun/star/lang/WrappedTargetException.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/beans/PropertyVetoException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/beans/UnknownPropertyException.hdl"
#include "com/sun/star/beans/PropertyValue.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace beans {

class SAL_NO_VTABLE XPropertyAccess : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > SAL_CALL getPropertyValues(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setPropertyValues( const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aProps ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyAccess >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYACCESS_HDL
