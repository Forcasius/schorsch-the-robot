#ifndef INCLUDED_COM_SUN_STAR_BEANS_XINTROTEST_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_XINTROTEST_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace beans { class XPropertiesChangeListener; } } } }
#include "com/sun/star/uno/TypeClass.hdl"
#include "com/sun/star/beans/PropertyValue.hdl"
#include "com/sun/star/beans/Property.hdl"
#include "com/sun/star/uno/XInterface.hdl"
namespace com { namespace sun { namespace star { namespace beans { class XIntroTest; } } } }
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace beans {

class SAL_NO_VTABLE XIntroTest : public ::com::sun::star::uno::XInterface
{
public:

    // Attributes
    virtual ::rtl::OUString SAL_CALL getObjectName() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setObjectName( const ::rtl::OUString& _objectname ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getFirstName() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getLastName() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getAge() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getChildrenCount() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setChildrenCount( ::sal_Int16 _childrencount ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::beans::Property SAL_CALL getFirstStruct() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setFirstStruct( const ::com::sun::star::beans::Property& _firststruct ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::beans::PropertyValue SAL_CALL getSecondStruct() throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setSecondStruct( const ::com::sun::star::beans::PropertyValue& _secondstruct ) throw (::com::sun::star::uno::RuntimeException) = 0;

    // Methods
    virtual void SAL_CALL writeln( const ::rtl::OUString& Text ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int32 SAL_CALL getDroenk(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::beans::XIntroTest > SAL_CALL getIntroTest(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int32 SAL_CALL getUps( ::sal_Int32 l ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDroenk( ::sal_Int32 l ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getBla(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBla( ::sal_Int32 n ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getBlub(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setBlub( ::sal_Int16 n ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getGulp(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL setGulp( ::sal_Int16 n ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::TypeClass SAL_CALL getTypeClass( ::sal_Int16 n ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setTypeClass( ::com::sun::star::uno::TypeClass t, double d1, double d2 ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getStrings(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setStrings( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& Strings ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setStringsPerMethod( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& Strings, ::sal_Int16 n ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::sal_Int16 > > > SAL_CALL getMultiSequence(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setMultiSequence( const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::sal_Int16 > > >& Seq ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL addPropertiesChangeListener( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& PropertyNames, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& Listener ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removePropertiesChangeListener( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& Listener ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XIntroTest >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_BEANS_XINTROTEST_HDL
