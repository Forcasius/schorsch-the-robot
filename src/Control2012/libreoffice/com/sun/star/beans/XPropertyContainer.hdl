#ifndef INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYCONTAINER_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYCONTAINER_HDL

#include "sal/config.h"

#include "com/sun/star/beans/UnknownPropertyException.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/beans/IllegalTypeException.hdl"
#include "com/sun/star/beans/PropertyExistException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/beans/NotRemoveableException.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace beans {

class SAL_NO_VTABLE XPropertyContainer : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL addProperty( const ::rtl::OUString& Name, ::sal_Int16 Attributes, const ::com::sun::star::uno::Any& DefaultValue ) throw (::com::sun::star::beans::PropertyExistException, ::com::sun::star::beans::IllegalTypeException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeProperty( const ::rtl::OUString& Name ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::NotRemoveableException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyContainer >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_BEANS_XPROPERTYCONTAINER_HDL
