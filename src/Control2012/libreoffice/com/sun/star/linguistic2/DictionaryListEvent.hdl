#ifndef INCLUDED_COM_SUN_STAR_LINGUISTIC2_DICTIONARYLISTEVENT_HDL
#define INCLUDED_COM_SUN_STAR_LINGUISTIC2_DICTIONARYLISTEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/linguistic2/DictionaryEvent.hdl"
#include "com/sun/star/lang/EventObject.hdl"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace linguistic2 {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct DictionaryListEvent: public ::com::sun::star::lang::EventObject {
    inline DictionaryListEvent() SAL_THROW(());

    inline DictionaryListEvent(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Source_, const ::sal_Int16& nCondensedEvent_, const ::com::sun::star::uno::Sequence< ::com::sun::star::linguistic2::DictionaryEvent >& aDictionaryEvents_) SAL_THROW(());

    ::sal_Int16 nCondensedEvent CPPU_GCC3_ALIGN(::com::sun::star::lang::EventObject);
    ::com::sun::star::uno::Sequence< ::com::sun::star::linguistic2::DictionaryEvent > aDictionaryEvents;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::linguistic2::DictionaryListEvent* );

#endif // INCLUDED_COM_SUN_STAR_LINGUISTIC2_DICTIONARYLISTEVENT_HDL
