#ifndef INCLUDED_COM_SUN_STAR_LINGUISTIC2_XPROOFREADER_HDL
#define INCLUDED_COM_SUN_STAR_LINGUISTIC2_XPROOFREADER_HDL

#include "sal/config.h"

#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/beans/PropertyValue.hdl"
#include "com/sun/star/lang/Locale.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/linguistic2/ProofreadingResult.hdl"
#include "com/sun/star/linguistic2/XSupportedLocales.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace linguistic2 {

class SAL_NO_VTABLE XProofreader : public ::com::sun::star::linguistic2::XSupportedLocales
{
public:

    // Methods
    virtual ::sal_Bool SAL_CALL isSpellChecker(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::linguistic2::ProofreadingResult SAL_CALL doProofreading( const ::rtl::OUString& aDocumentIdentifier, const ::rtl::OUString& aText, const ::com::sun::star::lang::Locale& aLocale, ::sal_Int32 nStartOfSentencePosition, ::sal_Int32 nSuggestedBehindEndOfSentencePosition, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aProperties ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL ignoreRule( const ::rtl::OUString& aRuleIdentifier, const ::com::sun::star::lang::Locale& aLocale ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL resetIgnoreRules(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::linguistic2::XProofreader >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_LINGUISTIC2_XPROOFREADER_HDL
