#ifndef INCLUDED_COM_SUN_STAR_JAVA_MISSINGJAVARUNTIMEEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_JAVA_MISSINGJAVARUNTIMEEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/java/JavaInitializationException.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace java {

class CPPU_GCC_DLLPUBLIC_EXPORT MissingJavaRuntimeException : public ::com::sun::star::java::JavaInitializationException
{
public:
    inline CPPU_GCC_DLLPRIVATE MissingJavaRuntimeException() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE MissingJavaRuntimeException(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::rtl::OUString& URLRuntimeLib_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE MissingJavaRuntimeException(MissingJavaRuntimeException const &);

    inline CPPU_GCC_DLLPRIVATE ~MissingJavaRuntimeException();

    inline CPPU_GCC_DLLPRIVATE MissingJavaRuntimeException & operator =(MissingJavaRuntimeException const &);

    ::rtl::OUString URLRuntimeLib CPPU_GCC3_ALIGN( ::com::sun::star::java::JavaInitializationException );
};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::java::MissingJavaRuntimeException* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_JAVA_MISSINGJAVARUNTIMEEXCEPTION_HDL
