#ifndef INCLUDED_COM_SUN_STAR_SETUP_MIRRORENTRY_HDL
#define INCLUDED_COM_SUN_STAR_SETUP_MIRRORENTRY_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace setup {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct MirrorEntry {
    inline MirrorEntry() SAL_THROW(());

    inline MirrorEntry(const ::rtl::OUString& strDisplayname_, const ::rtl::OUString& strPath_, const ::sal_Int16& nQuality_) SAL_THROW(());

    ::rtl::OUString strDisplayname;
    ::rtl::OUString strPath;
    ::sal_Int16 nQuality;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::setup::MirrorEntry* );

#endif // INCLUDED_COM_SUN_STAR_SETUP_MIRRORENTRY_HDL
