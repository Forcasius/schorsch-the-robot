#ifndef INCLUDED_COM_SUN_STAR_DEPLOYMENT_XPACKAGEREGISTRY_HDL
#define INCLUDED_COM_SUN_STAR_DEPLOYMENT_XPACKAGEREGISTRY_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace deployment { class XPackageTypeInfo; } } } }
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/ucb/CommandFailedException.hdl"
#include "com/sun/star/deployment/DeploymentException.hdl"
#include "com/sun/star/deployment/InvalidRemovedParameterException.hdl"
namespace com { namespace sun { namespace star { namespace ucb { class XCommandEnvironment; } } } }
namespace com { namespace sun { namespace star { namespace deployment { class XPackage; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace deployment {

class SAL_NO_VTABLE XPackageRegistry : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::deployment::XPackage > SAL_CALL bindPackage( const ::rtl::OUString& url, const ::rtl::OUString& mediaType, ::sal_Bool removed, const ::rtl::OUString& identifier, const ::com::sun::star::uno::Reference< ::com::sun::star::ucb::XCommandEnvironment >& xCmdEnv ) throw (::com::sun::star::deployment::DeploymentException, ::com::sun::star::deployment::InvalidRemovedParameterException, ::com::sun::star::ucb::CommandFailedException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Reference< ::com::sun::star::deployment::XPackageTypeInfo > > SAL_CALL getSupportedPackageTypes(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL packageRemoved( const ::rtl::OUString& url, const ::rtl::OUString& mediaType ) throw (::com::sun::star::deployment::DeploymentException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::deployment::XPackageRegistry >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_DEPLOYMENT_XPACKAGEREGISTRY_HDL
