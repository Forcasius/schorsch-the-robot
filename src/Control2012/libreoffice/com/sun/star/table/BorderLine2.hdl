#ifndef INCLUDED_COM_SUN_STAR_TABLE_BORDERLINE2_HDL
#define INCLUDED_COM_SUN_STAR_TABLE_BORDERLINE2_HDL

#include "sal/config.h"

#include "com/sun/star/table/BorderLine.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace table {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct BorderLine2: public ::com::sun::star::table::BorderLine {
    inline BorderLine2() SAL_THROW(());

    inline BorderLine2(const ::sal_Int32& Color_, const ::sal_Int16& InnerLineWidth_, const ::sal_Int16& OuterLineWidth_, const ::sal_Int16& LineDistance_, const ::sal_Int16& LineStyle_, const ::sal_uInt32& LineWidth_) SAL_THROW(());

    ::sal_Int16 LineStyle CPPU_GCC3_ALIGN(::com::sun::star::table::BorderLine);
    ::sal_uInt32 LineWidth;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::table::BorderLine2* );

#endif // INCLUDED_COM_SUN_STAR_TABLE_BORDERLINE2_HDL
