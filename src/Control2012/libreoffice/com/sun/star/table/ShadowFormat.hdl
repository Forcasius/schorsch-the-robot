#ifndef INCLUDED_COM_SUN_STAR_TABLE_SHADOWFORMAT_HDL
#define INCLUDED_COM_SUN_STAR_TABLE_SHADOWFORMAT_HDL

#include "sal/config.h"

#include "com/sun/star/table/ShadowLocation.hdl"
#include "com/sun/star/util/Color.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace table {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ShadowFormat {
    inline ShadowFormat() SAL_THROW(());

    inline ShadowFormat(const ::com::sun::star::table::ShadowLocation& Location_, const ::sal_Int16& ShadowWidth_, const ::sal_Bool& IsTransparent_, const ::sal_Int32& Color_) SAL_THROW(());

    ::com::sun::star::table::ShadowLocation Location;
    ::sal_Int16 ShadowWidth;
    ::sal_Bool IsTransparent;
    ::sal_Int32 Color;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::table::ShadowFormat* );

#endif // INCLUDED_COM_SUN_STAR_TABLE_SHADOWFORMAT_HDL
