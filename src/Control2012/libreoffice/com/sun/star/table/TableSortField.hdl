#ifndef INCLUDED_COM_SUN_STAR_TABLE_TABLESORTFIELD_HDL
#define INCLUDED_COM_SUN_STAR_TABLE_TABLESORTFIELD_HDL

#include "sal/config.h"

#include "com/sun/star/lang/Locale.hdl"
#include "com/sun/star/table/TableSortFieldType.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace table {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct TableSortField {
    inline TableSortField() SAL_THROW(());

    inline TableSortField(const ::sal_Int32& Field_, const ::sal_Bool& IsAscending_, const ::sal_Bool& IsCaseSensitive_, const ::com::sun::star::table::TableSortFieldType& FieldType_, const ::com::sun::star::lang::Locale& CollatorLocale_, const ::rtl::OUString& CollatorAlgorithm_) SAL_THROW(());

    ::sal_Int32 Field;
    ::sal_Bool IsAscending;
    ::sal_Bool IsCaseSensitive;
    ::com::sun::star::table::TableSortFieldType FieldType;
    ::com::sun::star::lang::Locale CollatorLocale;
    ::rtl::OUString CollatorAlgorithm;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::table::TableSortField* );

#endif // INCLUDED_COM_SUN_STAR_TABLE_TABLESORTFIELD_HDL
