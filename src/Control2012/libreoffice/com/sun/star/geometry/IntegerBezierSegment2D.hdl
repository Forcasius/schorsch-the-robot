#ifndef INCLUDED_COM_SUN_STAR_GEOMETRY_INTEGERBEZIERSEGMENT2D_HDL
#define INCLUDED_COM_SUN_STAR_GEOMETRY_INTEGERBEZIERSEGMENT2D_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace geometry {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct IntegerBezierSegment2D {
    inline IntegerBezierSegment2D() SAL_THROW(());

    inline IntegerBezierSegment2D(const ::sal_Int32& Px_, const ::sal_Int32& Py_, const ::sal_Int32& C1x_, const ::sal_Int32& C1y_, const ::sal_Int32& C2x_, const ::sal_Int32& C2y_) SAL_THROW(());

    ::sal_Int32 Px;
    ::sal_Int32 Py;
    ::sal_Int32 C1x;
    ::sal_Int32 C1y;
    ::sal_Int32 C2x;
    ::sal_Int32 C2y;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::geometry::IntegerBezierSegment2D* );

#endif // INCLUDED_COM_SUN_STAR_GEOMETRY_INTEGERBEZIERSEGMENT2D_HDL
