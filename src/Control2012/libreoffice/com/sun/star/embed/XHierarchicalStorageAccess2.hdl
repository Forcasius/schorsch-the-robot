#ifndef INCLUDED_COM_SUN_STAR_EMBED_XHIERARCHICALSTORAGEACCESS2_HDL
#define INCLUDED_COM_SUN_STAR_EMBED_XHIERARCHICALSTORAGEACCESS2_HDL

#include "sal/config.h"

#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/embed/InvalidStorageException.hdl"
#include "com/sun/star/packages/NoEncryptionException.hdl"
#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/packages/WrongPasswordException.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace embed { class XExtendedStorageStream; } } } }
#include "com/sun/star/embed/StorageWrappedTargetException.hdl"
#include "com/sun/star/embed/XHierarchicalStorageAccess.hdl"
#include "com/sun/star/io/IOException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace embed {

class SAL_NO_VTABLE XHierarchicalStorageAccess2 : public ::com::sun::star::embed::XHierarchicalStorageAccess
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::embed::XExtendedStorageStream > SAL_CALL openEncryptedStreamByHierarchicalName( const ::rtl::OUString& sStreamName, ::sal_Int32 nOpenMode, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue >& aEncryptionData ) throw (::com::sun::star::embed::InvalidStorageException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::packages::NoEncryptionException, ::com::sun::star::packages::WrongPasswordException, ::com::sun::star::io::IOException, ::com::sun::star::embed::StorageWrappedTargetException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XHierarchicalStorageAccess2 >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_EMBED_XHIERARCHICALSTORAGEACCESS2_HDL
