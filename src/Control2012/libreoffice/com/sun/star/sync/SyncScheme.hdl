#ifndef INCLUDED_COM_SUN_STAR_SYNC_SYNCSCHEME_HDL
#define INCLUDED_COM_SUN_STAR_SYNC_SYNCSCHEME_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace sync {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct SyncScheme {
    inline SyncScheme() SAL_THROW(());

    inline SyncScheme(const ::rtl::OUString& Scheme_, const ::rtl::OUString& Root_) SAL_THROW(());

    ::rtl::OUString Scheme;
    ::rtl::OUString Root;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::sync::SyncScheme* );

#endif // INCLUDED_COM_SUN_STAR_SYNC_SYNCSCHEME_HDL
