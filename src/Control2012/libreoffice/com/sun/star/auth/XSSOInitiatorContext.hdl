#ifndef INCLUDED_COM_SUN_STAR_AUTH_XSSOINITIATORCONTEXT_HDL
#define INCLUDED_COM_SUN_STAR_AUTH_XSSOINITIATORCONTEXT_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/auth/AuthenticationFailedException.hdl"
#include "com/sun/star/auth/InvalidContextException.hdl"
#include "com/sun/star/auth/InvalidCredentialException.hdl"
#include "com/sun/star/auth/InvalidArgumentException.hdl"
#include "com/sun/star/auth/XSSOContext.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace auth {

class SAL_NO_VTABLE XSSOInitiatorContext : public ::com::sun::star::auth::XSSOContext
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::sal_Int8 > SAL_CALL init( const ::com::sun::star::uno::Sequence< ::sal_Int8 >& Token ) throw (::com::sun::star::auth::InvalidArgumentException, ::com::sun::star::auth::InvalidCredentialException, ::com::sun::star::auth::InvalidContextException, ::com::sun::star::auth::AuthenticationFailedException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::auth::XSSOInitiatorContext >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_AUTH_XSSOINITIATORCONTEXT_HDL
