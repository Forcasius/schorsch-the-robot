#ifndef INCLUDED_COM_SUN_STAR_AUTH_XSSOMANAGER_HDL
#define INCLUDED_COM_SUN_STAR_AUTH_XSSOMANAGER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace auth { class XSSOAcceptorContext; } } } }
#include "com/sun/star/auth/UnsupportedException.hdl"
#include "com/sun/star/auth/InvalidPrincipalException.hdl"
#include "com/sun/star/auth/InvalidCredentialException.hdl"
#include "com/sun/star/auth/InvalidArgumentException.hdl"
namespace com { namespace sun { namespace star { namespace auth { class XSSOInitiatorContext; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace auth {

class SAL_NO_VTABLE XSSOManager : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::rtl::OUString SAL_CALL getMechanism(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::auth::XSSOInitiatorContext > SAL_CALL createInitiatorContext( const ::rtl::OUString& SourcePrincipal, const ::rtl::OUString& TargetPrincipal, const ::rtl::OUString& TargetHost ) throw (::com::sun::star::auth::InvalidArgumentException, ::com::sun::star::auth::InvalidCredentialException, ::com::sun::star::auth::InvalidPrincipalException, ::com::sun::star::auth::UnsupportedException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::auth::XSSOAcceptorContext > SAL_CALL createAcceptorContext( const ::rtl::OUString& TargetPrincipal ) throw (::com::sun::star::auth::InvalidArgumentException, ::com::sun::star::auth::InvalidCredentialException, ::com::sun::star::auth::InvalidPrincipalException, ::com::sun::star::auth::UnsupportedException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::auth::XSSOManager >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_AUTH_XSSOMANAGER_HDL
