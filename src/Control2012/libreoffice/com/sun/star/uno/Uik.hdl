#ifndef INCLUDED_COM_SUN_STAR_UNO_UIK_HDL
#define INCLUDED_COM_SUN_STAR_UNO_UIK_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct Uik {
    inline Uik() SAL_THROW(());

    inline Uik(const ::sal_uInt32& m_Data1_, const ::sal_uInt16& m_Data2_, const ::sal_uInt16& m_Data3_, const ::sal_uInt32& m_Data4_, const ::sal_uInt32& m_Data5_) SAL_THROW(());

    ::sal_uInt32 m_Data1;
    ::sal_uInt16 m_Data2;
    ::sal_uInt16 m_Data3;
    ::sal_uInt32 m_Data4;
    ::sal_uInt32 m_Data5;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Uik* );

#endif // INCLUDED_COM_SUN_STAR_UNO_UIK_HDL
