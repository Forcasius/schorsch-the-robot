#ifndef INCLUDED_COM_SUN_STAR_MAIL_MAILATTACHMENT_HDL
#define INCLUDED_COM_SUN_STAR_MAIL_MAILATTACHMENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace datatransfer { class XTransferable; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace mail {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct MailAttachment {
    inline MailAttachment() SAL_THROW(());

    inline MailAttachment(const ::com::sun::star::uno::Reference< ::com::sun::star::datatransfer::XTransferable >& Data_, const ::rtl::OUString& ReadableName_) SAL_THROW(());

    ::com::sun::star::uno::Reference< ::com::sun::star::datatransfer::XTransferable > Data;
    ::rtl::OUString ReadableName;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::mail::MailAttachment* );

#endif // INCLUDED_COM_SUN_STAR_MAIL_MAILATTACHMENT_HDL
