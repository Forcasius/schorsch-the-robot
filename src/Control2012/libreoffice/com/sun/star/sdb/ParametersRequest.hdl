#ifndef INCLUDED_COM_SUN_STAR_SDB_PARAMETERSREQUEST_HDL
#define INCLUDED_COM_SUN_STAR_SDB_PARAMETERSREQUEST_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace sdbc { class XConnection; } } } }
#include "com/sun/star/task/ClassifiedInteractionRequest.hdl"
namespace com { namespace sun { namespace star { namespace container { class XIndexAccess; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace sdb {

class CPPU_GCC_DLLPUBLIC_EXPORT ParametersRequest : public ::com::sun::star::task::ClassifiedInteractionRequest
{
public:
    inline CPPU_GCC_DLLPRIVATE ParametersRequest() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ParametersRequest(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::com::sun::star::task::InteractionClassification& Classification_, const ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess >& Parameters_, const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection >& Connection_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ParametersRequest(ParametersRequest const &);

    inline CPPU_GCC_DLLPRIVATE ~ParametersRequest();

    inline CPPU_GCC_DLLPRIVATE ParametersRequest & operator =(ParametersRequest const &);

    ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess > Parameters CPPU_GCC3_ALIGN( ::com::sun::star::task::ClassifiedInteractionRequest );
    ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection > Connection;
};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::sdb::ParametersRequest* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_SDB_PARAMETERSREQUEST_HDL
