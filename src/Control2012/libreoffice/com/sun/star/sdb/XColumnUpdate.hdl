#ifndef INCLUDED_COM_SUN_STAR_SDB_XCOLUMNUPDATE_HDL
#define INCLUDED_COM_SUN_STAR_SDB_XCOLUMNUPDATE_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
#include "com/sun/star/util/Time.hdl"
#include "com/sun/star/util/DateTime.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/util/Date.hdl"
#include "com/sun/star/sdbc/SQLException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace sdb {

class SAL_NO_VTABLE XColumnUpdate : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL updateNull(  ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateBoolean( ::sal_Bool x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateByte( ::sal_Int8 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateShort( ::sal_Int16 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateInt( ::sal_Int32 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateLong( ::sal_Int64 x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateFloat( float x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateDouble( double x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateString( const ::rtl::OUString& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateBytes( const ::com::sun::star::uno::Sequence< ::sal_Int8 >& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateDate( const ::com::sun::star::util::Date& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateTime( const ::com::sun::star::util::Time& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateTimestamp( const ::com::sun::star::util::DateTime& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateBinaryStream( const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& x, ::sal_Int32 length ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateCharacterStream( const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& x, ::sal_Int32 length ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateObject( const ::com::sun::star::uno::Any& x ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL updateNumericObject( const ::com::sun::star::uno::Any& x, ::sal_Int32 scale ) throw (::com::sun::star::sdbc::SQLException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::sdb::XColumnUpdate >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_SDB_XCOLUMNUPDATE_HDL
