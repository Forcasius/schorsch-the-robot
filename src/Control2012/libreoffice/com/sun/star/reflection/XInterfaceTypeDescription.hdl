#ifndef INCLUDED_COM_SUN_STAR_REFLECTION_XINTERFACETYPEDESCRIPTION_HDL
#define INCLUDED_COM_SUN_STAR_REFLECTION_XINTERFACETYPEDESCRIPTION_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Uik.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace reflection { class XInterfaceMemberTypeDescription; } } } }
#include "com/sun/star/reflection/XTypeDescription.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace reflection {

class SAL_NO_VTABLE XInterfaceTypeDescription : public ::com::sun::star::reflection::XTypeDescription
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::reflection::XTypeDescription > SAL_CALL getBaseType(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Uik SAL_CALL getUik(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Reference< ::com::sun::star::reflection::XInterfaceMemberTypeDescription > > SAL_CALL getMembers(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::reflection::XInterfaceTypeDescription >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_REFLECTION_XINTERFACETYPEDESCRIPTION_HDL
