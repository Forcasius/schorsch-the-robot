#ifndef INCLUDED_COM_SUN_STAR_REFLECTION_PARAMINFO_HDL
#define INCLUDED_COM_SUN_STAR_REFLECTION_PARAMINFO_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace reflection { class XIdlClass; } } } }
#include "com/sun/star/reflection/ParamMode.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace reflection {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ParamInfo {
    inline ParamInfo() SAL_THROW(());

    inline ParamInfo(const ::rtl::OUString& aName_, const ::com::sun::star::reflection::ParamMode& aMode_, const ::com::sun::star::uno::Reference< ::com::sun::star::reflection::XIdlClass >& aType_) SAL_THROW(());

    ::rtl::OUString aName;
    ::com::sun::star::reflection::ParamMode aMode;
    ::com::sun::star::uno::Reference< ::com::sun::star::reflection::XIdlClass > aType;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::reflection::ParamInfo* );

#endif // INCLUDED_COM_SUN_STAR_REFLECTION_PARAMINFO_HDL
