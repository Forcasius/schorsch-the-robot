#ifndef INCLUDED_COM_SUN_STAR_CHART2_LIGHTSOURCE_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_LIGHTSOURCE_HDL

#include "sal/config.h"

#include "com/sun/star/drawing/Direction3D.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace chart2 {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct LightSource {
    inline LightSource() SAL_THROW(());

    inline LightSource(const ::sal_Int32& nDiffuseColor_, const ::com::sun::star::drawing::Direction3D& aDirection_, const ::sal_Bool& bIsEnabled_, const ::sal_Bool& bSpecular_) SAL_THROW(());

    ::sal_Int32 nDiffuseColor;
    ::com::sun::star::drawing::Direction3D aDirection;
    ::sal_Bool bIsEnabled;
    ::sal_Bool bSpecular;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::chart2::LightSource* );

#endif // INCLUDED_COM_SUN_STAR_CHART2_LIGHTSOURCE_HDL
