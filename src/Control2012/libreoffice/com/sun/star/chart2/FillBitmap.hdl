#ifndef INCLUDED_COM_SUN_STAR_CHART2_FILLBITMAP_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_FILLBITMAP_HDL

#include "sal/config.h"

#include "com/sun/star/awt/Point.hdl"
#include "com/sun/star/drawing/BitmapMode.hdl"
#include "com/sun/star/awt/Size.hdl"
#include "com/sun/star/drawing/RectanglePoint.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace chart2 {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct FillBitmap {
    inline FillBitmap() SAL_THROW(());

    inline FillBitmap(const ::rtl::OUString& aURL_, const ::com::sun::star::awt::Point& aOffset_, const ::com::sun::star::awt::Point& aPositionOffset_, const ::com::sun::star::drawing::RectanglePoint& aRectanglePoint_, const ::sal_Bool& bLogicalSize_, const ::com::sun::star::awt::Size& aSize_, const ::com::sun::star::drawing::BitmapMode& aBitmapMode_) SAL_THROW(());

    ::rtl::OUString aURL;
    ::com::sun::star::awt::Point aOffset;
    ::com::sun::star::awt::Point aPositionOffset;
    ::com::sun::star::drawing::RectanglePoint aRectanglePoint;
    ::sal_Bool bLogicalSize;
    ::com::sun::star::awt::Size aSize;
    ::com::sun::star::drawing::BitmapMode aBitmapMode;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::chart2::FillBitmap* );

#endif // INCLUDED_COM_SUN_STAR_CHART2_FILLBITMAP_HDL
