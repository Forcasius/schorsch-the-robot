#ifndef INCLUDED_COM_SUN_STAR_CHART2_DATA_XDATARECEIVER_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_DATA_XDATARECEIVER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XDataSource; } } } } }
#include "com/sun/star/lang/IllegalArgumentException.hdl"
namespace com { namespace sun { namespace star { namespace util { class XNumberFormatsSupplier; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XRangeHighlighter; } } } } }
#include "com/sun/star/beans/PropertyValue.hdl"
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XDataProvider; } } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace chart2 { namespace data {

class SAL_NO_VTABLE XDataReceiver : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL attachDataProvider( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::data::XDataProvider >& xProvider ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setArguments( const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aArguments ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getUsedRangeRepresentations(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::chart2::data::XDataSource > SAL_CALL getUsedData(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL attachNumberFormatsSupplier( const ::com::sun::star::uno::Reference< ::com::sun::star::util::XNumberFormatsSupplier >& xSupplier ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::chart2::data::XRangeHighlighter > SAL_CALL getRangeHighlighter(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::data::XDataReceiver >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_CHART2_DATA_XDATARECEIVER_HDL
