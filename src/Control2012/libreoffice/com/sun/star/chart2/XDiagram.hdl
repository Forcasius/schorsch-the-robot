#ifndef INCLUDED_COM_SUN_STAR_CHART2_XDIAGRAM_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_XDIAGRAM_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/beans/PropertyValue.hdl"
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XDataSource; } } } } }
namespace com { namespace sun { namespace star { namespace chart2 { class XColorScheme; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { class XLegend; } } } }
namespace com { namespace sun { namespace star { namespace beans { class XPropertySet; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace chart2 {

class SAL_NO_VTABLE XDiagram : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > SAL_CALL getWall(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > SAL_CALL getFloor(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XLegend > SAL_CALL getLegend(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setLegend( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XLegend >& xLegend ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XColorScheme > SAL_CALL getDefaultColorScheme(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDefaultColorScheme( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XColorScheme >& xColorScheme ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDiagramData( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::data::XDataSource >& xDataSource, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aArguments ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XDiagram >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_CHART2_XDIAGRAM_HDL
