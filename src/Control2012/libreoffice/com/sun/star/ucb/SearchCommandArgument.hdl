#ifndef INCLUDED_COM_SUN_STAR_UCB_SEARCHCOMMANDARGUMENT_HDL
#define INCLUDED_COM_SUN_STAR_UCB_SEARCHCOMMANDARGUMENT_HDL

#include "sal/config.h"

#include "com/sun/star/beans/Property.hdl"
#include "com/sun/star/ucb/SearchInfo.hdl"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace ucb {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct SearchCommandArgument {
    inline SearchCommandArgument() SAL_THROW(());

    inline SearchCommandArgument(const ::com::sun::star::ucb::SearchInfo& Info_, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::Property >& Properties_) SAL_THROW(());

    ::com::sun::star::ucb::SearchInfo Info;
    ::com::sun::star::uno::Sequence< ::com::sun::star::beans::Property > Properties;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::SearchCommandArgument* );

#endif // INCLUDED_COM_SUN_STAR_UCB_SEARCHCOMMANDARGUMENT_HDL
