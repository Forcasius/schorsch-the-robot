#ifndef INCLUDED_COM_SUN_STAR_UCB_CROSSREFERENCE_HDL
#define INCLUDED_COM_SUN_STAR_UCB_CROSSREFERENCE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace ucb {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct CrossReference {
    inline CrossReference() SAL_THROW(());

    inline CrossReference(const ::rtl::OUString& Group_, const ::sal_Int32& Id_) SAL_THROW(());

    ::rtl::OUString Group;
    ::sal_Int32 Id;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::CrossReference* );

#endif // INCLUDED_COM_SUN_STAR_UCB_CROSSREFERENCE_HDL
