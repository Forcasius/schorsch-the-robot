#ifndef INCLUDED_COM_SUN_STAR_UCB_INSERTCOMMANDARGUMENT_HDL
#define INCLUDED_COM_SUN_STAR_UCB_INSERTCOMMANDARGUMENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace ucb {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct InsertCommandArgument {
    inline InsertCommandArgument() SAL_THROW(());

    inline InsertCommandArgument(const ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& Data_, const ::sal_Bool& ReplaceExisting_) SAL_THROW(());

    ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream > Data;
    ::sal_Bool ReplaceExisting;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::InsertCommandArgument* );

#endif // INCLUDED_COM_SUN_STAR_UCB_INSERTCOMMANDARGUMENT_HDL
