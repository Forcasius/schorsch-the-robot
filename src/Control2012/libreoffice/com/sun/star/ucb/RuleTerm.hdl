#ifndef INCLUDED_COM_SUN_STAR_UCB_RULETERM_HDL
#define INCLUDED_COM_SUN_STAR_UCB_RULETERM_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Any.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace ucb {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct RuleTerm {
    inline RuleTerm() SAL_THROW(());

    inline RuleTerm(const ::rtl::OUString& Property_, const ::com::sun::star::uno::Any& Operand_, const ::sal_Int16& Operator_, const ::sal_Bool& CaseSensitive_, const ::sal_Bool& RegularExpression_) SAL_THROW(());

    ::rtl::OUString Property;
    ::com::sun::star::uno::Any Operand;
    ::sal_Int16 Operator;
    ::sal_Bool CaseSensitive;
    ::sal_Bool RegularExpression;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::RuleTerm* );

#endif // INCLUDED_COM_SUN_STAR_UCB_RULETERM_HDL
