#ifndef INCLUDED_COM_SUN_STAR_UCB_AUTHENTICATIONREQUEST_HDL
#define INCLUDED_COM_SUN_STAR_UCB_AUTHENTICATIONREQUEST_HDL

#include "sal/config.h"

#include "com/sun/star/task/ClassifiedInteractionRequest.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace ucb {

class CPPU_GCC_DLLPUBLIC_EXPORT AuthenticationRequest : public ::com::sun::star::task::ClassifiedInteractionRequest
{
public:
    inline CPPU_GCC_DLLPRIVATE AuthenticationRequest() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE AuthenticationRequest(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::com::sun::star::task::InteractionClassification& Classification_, const ::rtl::OUString& ServerName_, const ::rtl::OUString& Diagnostic_, const ::sal_Bool& HasRealm_, const ::rtl::OUString& Realm_, const ::sal_Bool& HasUserName_, const ::rtl::OUString& UserName_, const ::sal_Bool& HasPassword_, const ::rtl::OUString& Password_, const ::sal_Bool& HasAccount_, const ::rtl::OUString& Account_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE AuthenticationRequest(AuthenticationRequest const &);

    inline CPPU_GCC_DLLPRIVATE ~AuthenticationRequest();

    inline CPPU_GCC_DLLPRIVATE AuthenticationRequest & operator =(AuthenticationRequest const &);

    ::rtl::OUString ServerName CPPU_GCC3_ALIGN( ::com::sun::star::task::ClassifiedInteractionRequest );
    ::rtl::OUString Diagnostic;
    ::sal_Bool HasRealm;
    ::rtl::OUString Realm;
    ::sal_Bool HasUserName;
    ::rtl::OUString UserName;
    ::sal_Bool HasPassword;
    ::rtl::OUString Password;
    ::sal_Bool HasAccount;
    ::rtl::OUString Account;
};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::AuthenticationRequest* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UCB_AUTHENTICATIONREQUEST_HDL
