#ifndef INCLUDED_COM_SUN_STAR_UCB_RESULTSETEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_UCB_RESULTSETEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/sdbc/SQLException.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace ucb {

class CPPU_GCC_DLLPUBLIC_EXPORT ResultSetException : public ::com::sun::star::sdbc::SQLException
{
public:
    inline CPPU_GCC_DLLPRIVATE ResultSetException() SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ResultSetException(const ::rtl::OUString& Message_, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Context_, const ::rtl::OUString& SQLState_, const ::sal_Int32& ErrorCode_, const ::com::sun::star::uno::Any& NextException_) SAL_THROW( () );

    inline CPPU_GCC_DLLPRIVATE ResultSetException(ResultSetException const &);

    inline CPPU_GCC_DLLPRIVATE ~ResultSetException();

    inline CPPU_GCC_DLLPRIVATE ResultSetException & operator =(ResultSetException const &);

};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::ucb::ResultSetException* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UCB_RESULTSETEXCEPTION_HDL
