#ifndef INCLUDED_COM_SUN_STAR_UCB_XDYNAMICRESULTSET_HDL
#define INCLUDED_COM_SUN_STAR_UCB_XDYNAMICRESULTSET_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/ucb/ServiceNotFoundException.hdl"
namespace com { namespace sun { namespace star { namespace ucb { class XDynamicResultSet; } } } }
#include "com/sun/star/ucb/ListenerAlreadySetException.hdl"
namespace com { namespace sun { namespace star { namespace sdbc { class XResultSet; } } } }
namespace com { namespace sun { namespace star { namespace ucb { class XDynamicResultSetListener; } } } }
#include "com/sun/star/lang/XComponent.hdl"
#include "com/sun/star/ucb/AlreadyInitializedException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace ucb {

class SAL_NO_VTABLE XDynamicResultSet : public ::com::sun::star::lang::XComponent
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XResultSet > SAL_CALL getStaticResultSet(  ) throw (::com::sun::star::ucb::ListenerAlreadySetException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setListener( const ::com::sun::star::uno::Reference< ::com::sun::star::ucb::XDynamicResultSetListener >& Listener ) throw (::com::sun::star::ucb::ListenerAlreadySetException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL connectToCache( const ::com::sun::star::uno::Reference< ::com::sun::star::ucb::XDynamicResultSet >& Cache ) throw (::com::sun::star::ucb::ListenerAlreadySetException, ::com::sun::star::ucb::AlreadyInitializedException, ::com::sun::star::ucb::ServiceNotFoundException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Int16 SAL_CALL getCapabilities(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::ucb::XDynamicResultSet >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UCB_XDYNAMICRESULTSET_HDL
