#ifndef INCLUDED_COM_SUN_STAR_REPORT_META_XFUNCTIONMANAGER_HDL
#define INCLUDED_COM_SUN_STAR_REPORT_META_XFUNCTIONMANAGER_HDL

#include "sal/config.h"

#include "com/sun/star/container/NoSuchElementException.hdl"
namespace com { namespace sun { namespace star { namespace report { namespace meta { class XFunctionDescription; } } } } }
namespace com { namespace sun { namespace star { namespace report { namespace meta { class XFunctionCategory; } } } } }
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/container/XIndexAccess.hdl"
#include "com/sun/star/lang/IndexOutOfBoundsException.hdl"
#include "com/sun/star/lang/WrappedTargetException.hdl"
#include "com/sun/star/lang/XComponent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace report { namespace meta {

class SAL_NO_VTABLE XFunctionManager : public ::com::sun::star::lang::XComponent, public ::com::sun::star::container::XIndexAccess
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::report::meta::XFunctionCategory > SAL_CALL getCategory( ::sal_Int32 position ) throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::report::meta::XFunctionDescription > SAL_CALL getFunctionByName( const ::rtl::OUString& name ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::report::meta::XFunctionManager >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_REPORT_META_XFUNCTIONMANAGER_HDL
