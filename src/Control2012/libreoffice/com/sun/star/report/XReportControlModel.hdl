#ifndef INCLUDED_COM_SUN_STAR_REPORT_XREPORTCONTROLMODEL_HDL
#define INCLUDED_COM_SUN_STAR_REPORT_XREPORTCONTROLMODEL_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/beans/UnknownPropertyException.hdl"
#include "com/sun/star/uno/Exception.hdl"
namespace com { namespace sun { namespace star { namespace report { class XFormatCondition; } } } }
#include "com/sun/star/container/XContainer.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/report/XReportControlFormat.hdl"
#include "com/sun/star/container/XIndexContainer.hdl"
#include "com/sun/star/report/XReportComponent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace report {

class SAL_NO_VTABLE XReportControlModel : public ::com::sun::star::report::XReportComponent, public ::com::sun::star::report::XReportControlFormat, public ::com::sun::star::container::XContainer, public ::com::sun::star::container::XIndexContainer
{
public:

    // Attributes
    virtual ::rtl::OUString SAL_CALL getDataField() throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDataField( const ::rtl::OUString& _datafield ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL getPrintWhenGroupChange() throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setPrintWhenGroupChange( ::sal_Bool _printwhengroupchange ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getConditionalPrintExpression() throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setConditionalPrintExpression( const ::rtl::OUString& _conditionalprintexpression ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException) = 0;

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::report::XFormatCondition > SAL_CALL createFormatCondition(  ) throw (::com::sun::star::uno::Exception, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::report::XReportControlModel >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_REPORT_XREPORTCONTROLMODEL_HDL
