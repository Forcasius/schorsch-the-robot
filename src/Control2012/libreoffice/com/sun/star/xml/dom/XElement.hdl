#ifndef INCLUDED_COM_SUN_STAR_XML_DOM_XELEMENT_HDL
#define INCLUDED_COM_SUN_STAR_XML_DOM_XELEMENT_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/xml/dom/DOMException.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace dom { class XNodeList; } } } } }
namespace com { namespace sun { namespace star { namespace xml { namespace dom { class XAttr; } } } } }
#include "com/sun/star/xml/dom/XNode.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace xml { namespace dom {

class SAL_NO_VTABLE XElement : public ::com::sun::star::xml::dom::XNode
{
public:

    // Methods
    virtual ::rtl::OUString SAL_CALL getAttribute( const ::rtl::OUString& name ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr > SAL_CALL getAttributeNode( const ::rtl::OUString& name ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr > SAL_CALL getAttributeNodeNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& localName ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getAttributeNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& localName ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XNodeList > SAL_CALL getElementsByTagName( const ::rtl::OUString& name ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XNodeList > SAL_CALL getElementsByTagNameNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& localName ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getTagName(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL hasAttribute( const ::rtl::OUString& name ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL hasAttributeNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& localName ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeAttribute( const ::rtl::OUString& name ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr > SAL_CALL removeAttributeNode( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr >& oldAttr ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeAttributeNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& localName ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setAttribute( const ::rtl::OUString& name, const ::rtl::OUString& value ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr > SAL_CALL setAttributeNode( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr >& newAttr ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr > SAL_CALL setAttributeNodeNS( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XAttr >& newAttr ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setAttributeNS( const ::rtl::OUString& namespaceURI, const ::rtl::OUString& qualifiedName, const ::rtl::OUString& value ) throw (::com::sun::star::xml::dom::DOMException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XElement >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_XML_DOM_XELEMENT_HDL
