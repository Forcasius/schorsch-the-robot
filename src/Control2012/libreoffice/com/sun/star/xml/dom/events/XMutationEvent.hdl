#ifndef INCLUDED_COM_SUN_STAR_XML_DOM_EVENTS_XMUTATIONEVENT_HDL
#define INCLUDED_COM_SUN_STAR_XML_DOM_EVENTS_XMUTATIONEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/xml/dom/events/XEvent.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/xml/dom/events/AttrChangeType.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace dom { class XNode; } } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace xml { namespace dom { namespace events {

class SAL_NO_VTABLE XMutationEvent : public ::com::sun::star::xml::dom::events::XEvent
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XNode > SAL_CALL getRelatedNode(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getPrevValue(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getNewValue(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getAttrName(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::xml::dom::events::AttrChangeType SAL_CALL getAttrChange(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL initMutationEvent( const ::rtl::OUString& typeArg, ::sal_Bool canBubbleArg, ::sal_Bool cancelableArg, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::XNode >& relatedNodeArg, const ::rtl::OUString& prevValueArg, const ::rtl::OUString& newValueArg, const ::rtl::OUString& attrNameArg, ::com::sun::star::xml::dom::events::AttrChangeType attrChangeArg ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::dom::events::XMutationEvent >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_XML_DOM_EVENTS_XMUTATIONEVENT_HDL
