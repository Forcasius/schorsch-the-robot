#ifndef INCLUDED_COM_SUN_STAR_XML_SAX_XFASTDOCUMENTHANDLER_HDL
#define INCLUDED_COM_SUN_STAR_XML_SAX_XFASTDOCUMENTHANDLER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace sax { class XLocator; } } } } }
#include "com/sun/star/xml/sax/SAXException.hdl"
#include "com/sun/star/xml/sax/XFastContextHandler.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace xml { namespace sax {

class SAL_NO_VTABLE XFastDocumentHandler : public ::com::sun::star::xml::sax::XFastContextHandler
{
public:

    // Methods
    virtual void SAL_CALL startDocument(  ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL endDocument(  ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setDocumentLocator( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XLocator >& xLocator ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastDocumentHandler >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_XML_SAX_XFASTDOCUMENTHANDLER_HDL
