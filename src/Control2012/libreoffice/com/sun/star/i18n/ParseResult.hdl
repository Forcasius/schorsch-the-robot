#ifndef INCLUDED_COM_SUN_STAR_I18N_PARSERESULT_HDL
#define INCLUDED_COM_SUN_STAR_I18N_PARSERESULT_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace i18n {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ParseResult {
    inline ParseResult() SAL_THROW(());

    inline ParseResult(const ::sal_Int32& LeadingWhiteSpace_, const ::sal_Int32& EndPos_, const ::sal_Int32& CharLen_, const double& Value_, const ::sal_Int32& TokenType_, const ::sal_Int32& StartFlags_, const ::sal_Int32& ContFlags_, const ::rtl::OUString& DequotedNameOrString_) SAL_THROW(());

    ::sal_Int32 LeadingWhiteSpace;
    ::sal_Int32 EndPos;
    ::sal_Int32 CharLen;
    double Value;
    ::sal_Int32 TokenType;
    ::sal_Int32 StartFlags;
    ::sal_Int32 ContFlags;
    ::rtl::OUString DequotedNameOrString;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::i18n::ParseResult* );

#endif // INCLUDED_COM_SUN_STAR_I18N_PARSERESULT_HDL
