#ifndef INCLUDED_COM_SUN_STAR_I18N_CURRENCY2_HDL
#define INCLUDED_COM_SUN_STAR_I18N_CURRENCY2_HDL

#include "sal/config.h"

#include "com/sun/star/i18n/Currency.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace i18n {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct Currency2: public ::com::sun::star::i18n::Currency {
    inline Currency2() SAL_THROW(());

    inline Currency2(const ::rtl::OUString& ID_, const ::rtl::OUString& Symbol_, const ::rtl::OUString& BankSymbol_, const ::rtl::OUString& Name_, const ::sal_Bool& Default_, const ::sal_Bool& UsedInCompatibleFormatCodes_, const ::sal_Int16& DecimalPlaces_, const ::sal_Bool& LegacyOnly_) SAL_THROW(());

    ::sal_Bool LegacyOnly CPPU_GCC3_ALIGN(::com::sun::star::i18n::Currency);
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::i18n::Currency2* );

#endif // INCLUDED_COM_SUN_STAR_I18N_CURRENCY2_HDL
