#ifndef INCLUDED_COM_SUN_STAR_DRAWING_BOUNDVOLUME_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_BOUNDVOLUME_HDL

#include "sal/config.h"

#include "com/sun/star/drawing/Position3D.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace drawing {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct BoundVolume {
    inline BoundVolume() SAL_THROW(());

    inline BoundVolume(const ::com::sun::star::drawing::Position3D& min_, const ::com::sun::star::drawing::Position3D& max_) SAL_THROW(());

    ::com::sun::star::drawing::Position3D min;
    ::com::sun::star::drawing::Position3D max;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::drawing::BoundVolume* );

#endif // INCLUDED_COM_SUN_STAR_DRAWING_BOUNDVOLUME_HDL
