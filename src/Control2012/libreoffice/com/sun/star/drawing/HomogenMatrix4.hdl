#ifndef INCLUDED_COM_SUN_STAR_DRAWING_HOMOGENMATRIX4_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_HOMOGENMATRIX4_HDL

#include "sal/config.h"

#include "com/sun/star/drawing/HomogenMatrixLine4.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace drawing {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct HomogenMatrix4 {
    inline HomogenMatrix4() SAL_THROW(());

    inline HomogenMatrix4(const ::com::sun::star::drawing::HomogenMatrixLine4& Line1_, const ::com::sun::star::drawing::HomogenMatrixLine4& Line2_, const ::com::sun::star::drawing::HomogenMatrixLine4& Line3_, const ::com::sun::star::drawing::HomogenMatrixLine4& Line4_) SAL_THROW(());

    ::com::sun::star::drawing::HomogenMatrixLine4 Line1;
    ::com::sun::star::drawing::HomogenMatrixLine4 Line2;
    ::com::sun::star::drawing::HomogenMatrixLine4 Line3;
    ::com::sun::star::drawing::HomogenMatrixLine4 Line4;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::drawing::HomogenMatrix4* );

#endif // INCLUDED_COM_SUN_STAR_DRAWING_HOMOGENMATRIX4_HDL
