#ifndef INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XCONFIGURATIONCONTROLLER_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XCONFIGURATIONCONTROLLER_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace drawing { namespace framework { class XResource; } } } } }
#include "com/sun/star/drawing/framework/ResourceActivationMode.hdl"
namespace com { namespace sun { namespace star { namespace drawing { namespace framework { class XResourceId; } } } } }
namespace com { namespace sun { namespace star { namespace drawing { namespace framework { class XConfiguration; } } } } }
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/drawing/framework/XResourceFactoryManager.hdl"
#include "com/sun/star/drawing/framework/XConfigurationControllerBroadcaster.hdl"
#include "com/sun/star/drawing/framework/XConfigurationControllerRequestQueue.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace drawing { namespace framework {

class SAL_NO_VTABLE XConfigurationController : public ::com::sun::star::drawing::framework::XConfigurationControllerRequestQueue, public ::com::sun::star::drawing::framework::XConfigurationControllerBroadcaster, public ::com::sun::star::drawing::framework::XResourceFactoryManager
{
public:

    // Methods
    virtual void SAL_CALL requestResourceActivation( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XResourceId >& xResourceId, ::com::sun::star::drawing::framework::ResourceActivationMode eMode ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL requestResourceDeactivation( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XResourceId >& xResourceId ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XResource > SAL_CALL getResource( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XResourceId >& xResourceId ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL lock(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL unlock(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL update(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XConfiguration > SAL_CALL getRequestedConfiguration(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XConfiguration > SAL_CALL getCurrentConfiguration(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL restoreConfiguration( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XConfiguration >& xConfiguration ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XConfigurationController >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XCONFIGURATIONCONTROLLER_HDL
