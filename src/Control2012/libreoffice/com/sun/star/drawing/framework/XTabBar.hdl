#ifndef INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XTABBAR_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XTABBAR_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/drawing/framework/TabBarButton.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace drawing { namespace framework {

class SAL_NO_VTABLE XTabBar : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL addTabBarButtonAfter( const ::com::sun::star::drawing::framework::TabBarButton& aButton, const ::com::sun::star::drawing::framework::TabBarButton& aAnchor ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL appendTabBarButton( const ::com::sun::star::drawing::framework::TabBarButton& aButton ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeTabBarButton( const ::com::sun::star::drawing::framework::TabBarButton& aButton ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL hasTabBarButton( const ::com::sun::star::drawing::framework::TabBarButton& aButton ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::drawing::framework::TabBarButton > SAL_CALL getTabBarButtons(  ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::framework::XTabBar >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_DRAWING_FRAMEWORK_XTABBAR_HDL
