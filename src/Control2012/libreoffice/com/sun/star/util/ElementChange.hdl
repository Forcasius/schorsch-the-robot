#ifndef INCLUDED_COM_SUN_STAR_UTIL_ELEMENTCHANGE_HDL
#define INCLUDED_COM_SUN_STAR_UTIL_ELEMENTCHANGE_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Any.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace util {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ElementChange {
    inline ElementChange() SAL_THROW(());

    inline ElementChange(const ::com::sun::star::uno::Any& Accessor_, const ::com::sun::star::uno::Any& Element_, const ::com::sun::star::uno::Any& ReplacedElement_) SAL_THROW(());

    ::com::sun::star::uno::Any Accessor;
    ::com::sun::star::uno::Any Element;
    ::com::sun::star::uno::Any ReplacedElement;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::util::ElementChange* );

#endif // INCLUDED_COM_SUN_STAR_UTIL_ELEMENTCHANGE_HDL
