#ifndef INCLUDED_COM_SUN_STAR_UTIL_DURATION_HDL
#define INCLUDED_COM_SUN_STAR_UTIL_DURATION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace util {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct Duration {
    inline Duration() SAL_THROW(());

    inline Duration(const ::sal_Bool& Negative_, const ::sal_uInt16& Years_, const ::sal_uInt16& Months_, const ::sal_uInt16& Days_, const ::sal_uInt16& Hours_, const ::sal_uInt16& Minutes_, const ::sal_uInt16& Seconds_, const ::sal_uInt16& MilliSeconds_) SAL_THROW(());

    ::sal_Bool Negative;
    ::sal_uInt16 Years;
    ::sal_uInt16 Months;
    ::sal_uInt16 Days;
    ::sal_uInt16 Hours;
    ::sal_uInt16 Minutes;
    ::sal_uInt16 Seconds;
    ::sal_uInt16 MilliSeconds;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::util::Duration* );

#endif // INCLUDED_COM_SUN_STAR_UTIL_DURATION_HDL
