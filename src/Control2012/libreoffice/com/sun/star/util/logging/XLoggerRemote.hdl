#ifndef INCLUDED_COM_SUN_STAR_UTIL_LOGGING_XLOGGERREMOTE_HDL
#define INCLUDED_COM_SUN_STAR_UTIL_LOGGING_XLOGGERREMOTE_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
namespace com { namespace sun { namespace star { namespace beans { class XPropertiesChangeListener; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace util { namespace logging {

class SAL_NO_VTABLE XLoggerRemote : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::sal_Int32 SAL_CALL getLevel(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getName(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::sal_Bool SAL_CALL isLoggable( ::sal_Int32 level ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL logp( ::sal_Int32 level, const ::rtl::OUString& sourceClass, const ::rtl::OUString& sourceMethod, const ::rtl::OUString& msg, const ::rtl::OUString& thread ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL addPropertiesChangeListener( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& listener ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::util::logging::XLoggerRemote >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UTIL_LOGGING_XLOGGERREMOTE_HDL
